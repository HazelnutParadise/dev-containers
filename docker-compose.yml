version: '3.9'

services:
  dev-container:
    image: ubuntu:latest  # 替換為你的開發環境基底映像，例如 node:16、python:3 等
    container_name: dev-container
    networks:
      - dev-network  # 使用自定義的 Docker 網路
    ports:
      - "3331:3331"  # 映射宿主機的 3331 到容器的 3331
    volumes:
      - workspace:/workspace  # 使用資料卷來保存數據
    working_dir: /workspace  # 設定工作目錄
    tty: true  # 啟用互動模式
    stdin_open: true
    command: /bin/bash  # 預設進入 bash，根據需求可以更改
    extra_hosts:
      - "host.docker.internal:host-gateway"  # 讓容器能解析宿主機的 localhost
    restart:
      unless-stopped

  postgres-dev:
    image: postgres:latest
    container_name: postgres_dev
    environment:
      POSTGRES_USER: user     # 替換成您的使用者名稱
      POSTGRES_PASSWORD: password  # 替換成您的密碼
      POSTGRES_DB: database        # 替換成您的資料庫名稱
    volumes:
      - pgdata:/var/lib/postgresql/data # 資料持久化
    ports:
      - "3332:5432"                     # 暴露本地端5432埠
    networks:
      - dev-network  # 與 dev-container 共享同一網路
    restart:
      unless-stopped

  adminer-dev:
    image: adminer:latest
    container_name: adminer_dev
    environment:
      ADMINER_DEFAULT_SERVER: postgres-dev  # 連接 PostgreSQL
    ports:
      - "3333:8080"                     # 暴露本地端8080埠
    depends_on:
      - postgres-dev
    networks:
      - dev-network  # 與 dev-container 和 postgres-dev 共享同一網路
    restart:
      unless-stopped

volumes:
  workspace:  # 為 dev-container 定義的資料卷
  pgdata:    # 為 postgres-dev 定義的資料卷

networks:
  dev-network:
    driver: bridge  # 使用橋接網路模式（預設）
